@model IEnumerable<SP_Common_Classes.Models.DB.vAttendanceReport>

<h2 class="text-center">Attendance Report - Visitors</h2>
<h2 class="text-center">Attendance Report - @ViewBag.Title</h2>

<table id="myTable" class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.DateAttended)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TimeAttended)
            </th>
            <th>
                <!--@Html.DisplayNameFor(model => model.CalcFirstName)-->
                Attendee Name
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClassAttended)
            </th>
            <th>
                <!-- @Html.DisplayNameFor(model => model.Parent1FirstName) -->
                Parent 1
            </th>
            <th>
                <!-- @Html.DisplayNameFor(model => model.Parent2FirstName) -->
                Parent 2
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                        string shortDate = item.DateAttended.ToString("MM/dd/yyyy");
                    }
                    @Html.DisplayFor(m => shortDate)
                </td>
                <td>
                    @{
                        string shortTime = item.TimeAttended.ToString("hh:mm tt");
                    }
                    @Html.DisplayFor(m => shortTime)
                </td>
                <td>
                    @Html.DisplayFor(m => item.LastName), @Html.DisplayFor(m => item.CalcFirstName)
                </td>
                <td>
                    @Html.DisplayFor(m => item.ClassAttended)
                </td>
                <td>
                    @{Boolean boolIsNull = string.IsNullOrEmpty(item.Parent1MobileNumber); }
                    @{
                        if (boolIsNull)
                        {
                            @(string.Format("{0} {1}", item.Parent1FirstName, item.Parent1LastName))
                        }
                        else
                        {
                            @(string.Format("{0} {1} ({2})", item.Parent1FirstName, item.Parent1LastName, item.Parent1MobileNumber.Trim()))
                        }
                    }
                </td>

                <td>
                    @{Boolean boolIsNull2 = string.IsNullOrEmpty(item.Parent2MobileNumber); }
                    @{
                        if (boolIsNull2)
                        {
                            @(string.Format("{0} {1}", item.Parent2FirstName, item.Parent2LastName))
                        }
                        else
                        {
                            @(string.Format("{0} {1} ({2})", item.Parent2FirstName, item.Parent2LastName, item.Parent2MobileNumber.Trim()))
                        }
                    }
                </td>
            </tr>
                        }
    </tbody>
</table>
